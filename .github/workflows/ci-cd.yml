name: CI/CD pipeline

on:
  push:
    branches: [ "main" ]

env:
  IMAGE: ${{ secrets.IMAGE_NAME }}

jobs:
  build-and-push:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build image
        run: docker build -t $IMAGE:latest .

      - name: Push
        run: docker push $IMAGE:latest

  test:
    name: Test image on GitHub runner
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Pull and run image
        run: |
          docker run -d --name testcontainer -p 8081:8080 $IMAGE:latest
          sleep 2
          curl -f http://localhost:8081/ || (docker logs testcontainer && exit 1)
          docker stop testcontainer && docker rm testcontainer

  deploy:
    name: Deploy on self-hosted runner (your Ubuntu)
    runs-on: self-hosted
    needs: test
    steps:
      - name: Login to Docker Hub on self-hosted runner
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Pull and run image on local machine
        run: |
          docker pull $IMAGE:latest
          docker stop ci_cd_app || true
          docker rm ci_cd_app || true
          docker run -d --name ci_cd_app -p 8080:8080 $IMAGE:latest
